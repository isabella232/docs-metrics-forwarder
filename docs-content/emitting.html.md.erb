---
title: Emitting Metrics to Metrics Forwarder for PCF
owner: PCF Autoscaler and Scheduler
---

This topic describes how custom app metrics are emitted to Metrics Forwarder for Pivotal Cloud Foundry (PCF).

##<a id="metric-endpoint"></a>Accessing the Endpoint and Credentials

To use Metrics Forwarder for PCF, you need to know its endpoint and credentials. You can find this information in the environment variables of a bound app.

Apps running on Cloud Foundry access their bound service instances using the `VCAP_SERVICES` environment variable. See the following example:

<pre class="terminal">
$ cf env my-app <br>
Getting env variables for app my-app in  org my-org / space my-space as user<span>@</span>example.com...
OK

System-Provided:
{
 "VCAP_SERVICES": {
  "metrics-forwarder": [
   {
    "credentials": {
     "access_key": "YOUR-ACCESS-KEY",
     "endpoint": "https://metrics-forwarder.SYSTEM-DOMAIN/v1/metrics"
    },
    "label": "metrics-forwarder",
    "name": "test-metrics-forwarder",
    "plan": "unlimited",
    "provider": null,
    "syslog_drain_url": null,
    "tags": [],
    "volume_mounts": []
   }
  ]
 }
}
</pre>

In the example above, note the following properties:

* `endpoint` is the URI for `POST` requests to the Metrics Forwarder API.
* `access_key` is the authentication token used in the `Authorization` header of the `POST` request to the Metrics Forwarder API.

You can search for your service by its `name`, which is the name you provided when creating the service instance, or dynamically through the `tags` or `label` properties. Similar to other PCF services, the `VCAP_SERVICES` environment variable for an app is modified only when the app is bound to a service instance.

## <a id="emit-metric"></a>Emitting Metrics

Metrics Forwarder accepts metrics emitted to its HTTP API using the `POST` method. See the following example:

```
{
    "applications": [
    {
        "id": "APP-ID",
        "instances": [
        {
            "id": "INSTANCE-ID",
            "index": "0",
            "metrics": [
            {
                "name": "a-metric",
                "type": "counter",
                "value": 0,
                "timestamp": 1094817600000,
                "unit": "number",
                "tags": { "a-tag":"a", "b-tag":"b" }
            }]
        }]
    }]
}
```

For each request to the Metrics Forwarder API, you receive information about your [rate limits](architecture.html#rate-limiting) in the response of the request. The following example applies to the default Unlimited plan.

```
x-ratelimit-limit →unlimited
x-ratelimit-metrics-limit →unlimited
x-ratelimit-metrics-remaining →unlimited
x-ratelimit-period →60
x-ratelimit-remaining →unlimited
x-ratelimit-retry-after →0
```

### <a id='frameworks'></a>Frameworks and Libraries

Frameworks and libraries help to control the frequency of metric emission, error handling, aggregation, and general API use.

#### Spring Boot Actuators

You can use [Spring Boot Actuators](https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#production-ready) to emit metrics to the Metrics Forwarder API. To do this, perform the following steps:

  1. Configure your app to use Spring Boot Actuators.
  1. Create the Metrics Forwarder for PCF service.
  1. Bind your app to the Metrics Forwarder for PCF service.
  1. Push or restage your app using the Java buildpack v4.2 or later.

#### Go

You can use a [Go library](https://github.com/pivotal-cf/go-metrics-pcf) to export metrics to Metrics Forwarder for PCF. To do this, perform the following steps:

1. Configure your app to use the `go-metrics` exporter.
1. Create the Metrics Forwarder for PCF service.
1. Bind your app to the Metrics Forwarder for PCF service.
1. Push or restage your app using the Go buildpack.

## <a id="certs"></a>SSL Certificates

The Metrics Forwarder API endpoint uses the SSL certificate configured on the GoRouter. If this certificate is a self-signed certificate, you need to configure all apps and tools emitting metrics to the Metrics Forwarder API to trust the self-signed certificates.
