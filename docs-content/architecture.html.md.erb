---
breadcrumb: Metrics Forwarder for Pivotal Cloud Foundry Documentation
title: Architecture
owner: PCF Autoscaler and Scheduler
---


This topic describes the high-level component architecture of the Metrics Forwarder for Pivotal Cloud Foundry (PCF) service. It describes the defaults configuration and other aspects of the service's components and how to manage them.

## <a id="topology"></a> HA Topology ##

In HA topology, the Metrics Forwarder for PCF service uses the following:

* Three API servers running the metrics forwarder HTTP API server and a Metron Agent.

* A Metric Forwarder Service Broker

* 



## <a id="rate-limiting"></a> Rate Limiting ##

Rate Limiting allows operators to limit the number of requets that are accepted for each app by the metrics forwarder and to limit the number of metrics accepted.  Each limit, requests and metrics, is limited per minute.  Rate Limits are applied to each request received by the Metrics Forwarder API and are calculated on a moving 60 second window.  Rate Limits can be conveyed in the response of each request.  Each request contains the following Rate Limit feedback: 

```
x-ratelimit-limit 
x-ratelimit-metrics-limit
x-ratelimit-metrics-remaining
x-ratelimit-period 
x-ratelimit-remaining
x-ratelimit-retry-after
```

## <a id="defaults"></a> Plan and Resource Defaults 

This section describes the defaults that the Metrics Forwarder for PCF tile applies to plans and resource configuration.

### Service Plans and Rate Limiting

Service Plans enable an operator to configure the rate limiting settings that apply to metrics emitted to the Metrics Forwarder service.   By default a single service plan is configured with unlimited requests and metrics.

### API Instance Resource Config

By default the tile is configured with 3 instances of the metrics forwarder api.  If you wish to conserve resources you can decrease the number of instances to as low as 1.  The service will not be HA and will be succeptible to outage should the single api instane experience failure of any kind.

### <a id="loggregator"></a> Loggregator as a subsystem dependency

Metrics Forwarder relies on Loggregator to transport metrics to the firehose.  The Metrics Forwarder does manage its own Metron agents for each of the API instances that are configured (in Resource Config).  These Metron Agents are configured to emit metrics directly to the loggregator components (Dopplers and Traffic Controllers) that are used by the rest of the components in PCF.  To accomodate the load of metrics produced by apps and emitted from the Metrics Forwarder the resources for Doppler Server and Traffice Controller may need to be increased.  Consult the Loggregator documentation for information on properly configuring these resources.


### <a id="persitence"></a> Metrics Persistence

Metrics that are emitted into the Metrics Forwarder api are not persisted in any way.  They are immediately transformed to a format acceptable to loggregator and then emitted.  To persist metrics that have been emitted into the Metrics Forwarder users can read the metrics directly from the firehose or use any nozzle to consume and persist loggregator data.

