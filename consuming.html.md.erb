---
title: Consuming Metrics from Firehose
owner: PCF Autoscaler and Scheduler
---

This topic describes how users can consume their custom app metrics from the Loggregator Firehose.

## <a id="firehose-creds"></a>Credentials

Users must have the `doppler.firehose` scope to read data from the Firehose. See [Scopes](https://docs.pivotal.io/pivotalcf/1-11/concepts/architecture/uaa.html#scopes) for a description of the scopes covered by UAA.

## <a id="consume-firehose"></a>Connecting to the Firehose

You can read metrics from the Firehose using a Firehose consumer of your choice, including [community](https://github.com/cloudfoundry/loggregator/blob/develop/docs/community-nozzles.md) and third-party nozzles. 

## <a id="consume-firehose"></a>Reading Metrics

Metrics Forwarder for PCF sends all metrics to Loggregator as [ValueMetrics](https://github.com/cloudfoundry/dropsonde-protocol/blob/master/events/README.md#events.ValueMetric). It also uses the `tags` attribute to indicate the type of the metric: gauge or counter.

All metrics emitted by apps through Metrics Forwarder for PCF have the following [Dropsonde envelope attributes](https://github.com/cloudfoundry/dropsonde-protocol/blob/master/events/README.md#events.Envelope).

<table class="nice">
    <th>Attribute</th>
    <th>API data</th>
    <th>Description</th>
    <tr>
        <td><code>job</code></td>
        <td><code>metrics_forwarder</code></td>
        <td>Name of the Metrics Forwarder job.</td>
    </tr>
    <tr>
        <td><code>origin</code></td>
        <td><code>metrics-forwarder</code></td>
        <td>Origin of Metrics Forwarder.</td>
    </tr>
    <tr>
        <td><code>tags</code></td>
        <td>See the <code>tags</code> table below.</td>
        <td>Metrics Forwarder-provided and user-defined key and value pairs to include additional identifying information.</td>
    </tr>
    <tr>
        <td><code>valueMetric</code></td>
        <td>See the <code>valueMetric</code> table below.</td>
        <td>Key and value pairs that include the name, value, and unit of the metric. The values are emitted to the API in the <code>metrics</code> entity of the JSON body.</td>
    </tr>
</table>

The table below lists the key and value pairs provided in the `tags` attribute of the above Dropsonde envelope.

<table class="nice">
    <th>Key</th>
    <th>API data</th>
    <th>Description</th>
    <tr>
        <td><code>applicationGuid</code></td>
        <td><code>applications.id</code></td>
        <td>App ID emitted to the API in the <code>applications</code> entity of the JSON body.</td>
    </tr>
    <tr>
        <td><code>applicationInstance</code></td>
        <td><code>applications.instances.id</code></td>
        <td>Instance ID emitted to the API in the <code>instances</code> entity of the JSON body.</td>
    </tr>
    <tr>
        <td><code>applicationInstanceIndex</code></td>
        <td><code>applications.instances.index</code></td>
        <td>Instance index emitted to the API in the <code>instances</code> entity of the JSON body.</td>
    </tr>
    <tr>
        <td><code>type</code></td>
        <td><code>applications.instances.metrics.type</code></td>
        <td>Metric type emitted to the API in the <code>metrics</code> entity of the JSON body.</td>
    </tr>
    <tr>
        <td>User-defined tags</code></td>
        <td><code>applications.instances.metrics.tags</code></td>
        <td>User-defined <code>tags</code> emitted to the API in the <code>metrics</code> entity of the JSON body.</td>
    </tr>
</table>
    
The table below lists the key and value pairs provided in the `valueMetric` attribute of the above Dropsonde envelope.

<table class="nice">
    <th>Key</th>
    <th>API data</th>
    <th>Description</th>
    <tr>
        <td><code>name</code></td>
        <td><code>applications.instances.metrics.name</code></td>
        <td>Metric name emitted to the API in the <code>metrics</code> entity of the JSON body.</td>
    </tr>
    <tr>
        <td><code>unit</code></td>
        <td><code>applications.instances.metrics.unit</code></td>
        <td>Metric unit emitted to the API in the <code>metrics</code> entity of the JSON body.</td>
    </tr>
    <tr>
        <td><code>value</code></td>
        <td><code>applications.instances.metrics.value</code></td>
        <td>Metric value emitted to the API in the <code>metrics</code> entity of the JSON body.</td>
    </tr>
</table>

For more information about the Metrics Forwarder API, see [its documentation](http://docs.pivotal.io/metrics-forwarder/api/).
